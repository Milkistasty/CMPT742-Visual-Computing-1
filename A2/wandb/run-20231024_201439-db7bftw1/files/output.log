Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
C:\Users\Alienware\AppData\Local\Programs\Python\Python311\Lib\site-packages\torch\functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ..\aten\src\ATen\native\TensorShape.cpp:3484.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
C:\Users\Alienware\AppData\Local\Programs\Python\Python311\Lib\site-packages\torch\nn\functional.py:4236: UserWarning: Default grid_sample and affine_grid behavior has changed to align_corners=False since 1.3.0. Please specify align_corners=True if the old behavior is desired. See the documentation of grid_sample for details.
  warnings.warn(
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 1 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 2 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 3 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 4 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 5 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 6 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 7 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 8 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 9 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 10 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 11 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 12 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 13 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 14 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 15 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 16 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 17 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 18 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 19 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 0 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 1 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 2 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 3 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 4 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 5 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
batch 6 --- Loss: 0.0000
Input shape to UNet: torch.Size([2, 1, 572, 572])
batch 7 --- Loss: 0.0000
Epoch 20 / 20 --- Loss: 0.0000
Input shape to UNet: torch.Size([4, 1, 572, 572])
Traceback (most recent call last):
  File "c:\Users\Alienware\Desktop\VC CMPT742\A2\assignment_2\train.py", line 173, in <module>
    wandb.save('checkpoint.pt')
  File "C:\Users\Alienware\AppData\Local\Programs\Python\Python311\Lib\site-packages\wandb\sdk\wandb_run.py", line 370, in wrapper_fn
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alienware\AppData\Local\Programs\Python\Python311\Lib\site-packages\wandb\sdk\wandb_run.py", line 360, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alienware\AppData\Local\Programs\Python\Python311\Lib\site-packages\wandb\sdk\wandb_run.py", line 1824, in save
    return self._save(glob_str, base_path, policy)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alienware\AppData\Local\Programs\Python\Python311\Lib\site-packages\wandb\sdk\wandb_run.py", line 1878, in _save
    os.symlink(abs_path, wandb_path)
OSError: [WinError 1314] 客户端没有所需的特权。: 'C:\\Users\\Alienware\\Desktop\\VC CMPT742\\A2\\checkpoint.pt' -> 'C:\\Users\\Alienware\\Desktop\\VC CMPT742\\A2\\wandb\\run-20231024_201439-db7bftw1\\files\\checkpoint.pt'
Input shape to UNet: torch.Size([4, 1, 572, 572])
Accuracy: 1.0000 ---- Loss: 0.0000